---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { ItemGrid as Props } from '~/types';
import Button from './Button.astro';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;
---

{
  items && items.length > 0 && (
    <div
      class={twMerge(
        `grid mx-auto gap-6 md:gap-8 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 md:grid-cols-2'
              : columns === 2
                ? 'md:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
    >
      {items.map(
        ({
          title,
          description,
          education,
          icon,
          callToAction,
          classes: itemClasses = {},
          expandable = false,
          moreLabel = 'En savoir plus',
          defaultOpen = false,
        }) => (
          <div class=" intersect-once intersect-quarter motion-safe:opacity-0   motion-safe:intersect:animate-fade">
            <div
              class={twMerge(
                'relative flex max-w-4xl p-4 lg:p-5 rounded-2xl border-2',
                'dark:border-white/40 dark:hover:border-primary',
                'bg-white/60 dark:bg-slate-900/60 backdrop-blur',
                'shadow-[0_10px_30px_rgba(0,0,0,0.06)]',
                'hover:scale-[1.02] hover:shadow-[0_16px_40px_rgba(0,0,0,0.12)]',
                'transition-all duration-300 ease-out', // ðŸ‘ˆ transition unifiÃ©e et adoucie
                panelClass,
                itemClasses?.panel
              )}
            >
              {' '}
              <div class="flex justify-center">
                {(icon || defaultIcon) && (
                  <span class="inline-grid place-items-center w-10 h-10 md:w-12 md:h-12 rounded-full bg-primary/10 text-primary mr-3">
                    <Icon
                      name={icon || defaultIcon}
                      class={twMerge('w-5 h-5 md:w-6 md:h-6', defaultIconClass, itemClasses?.icon)}
                    />
                  </span>
                )}
              </div>
              <div class="mt-0.5">
                {title && (
                  <h3 class={twMerge('text-lg md:text-xl font-semibold tracking-tight', titleClass)}>{title}</h3>
                )}

                {description && (
                  <p
                    class={twMerge(
                      `${title ? 'mt-2' : ''} text-sm md:text-[0.95rem] leading-relaxed text-muted`,
                      descriptionClass
                    )}
                    set:html={description}
                  />
                )}

                {education &&
                  (expandable ? (
                    <details class={twMerge(`${title ? 'mt-3' : ''} group`, itemClasses?.more)} open={defaultOpen}>
                      <summary
                        class="cursor-pointer inline-flex items-center gap-1 text-primary hover:text-primary/20
                 font-medium select-none"
                      >
                        {moreLabel}
                        <Icon name="tabler:chevron-down" class="w-4 h-4 transition-transform group-open:rotate-180" />
                      </summary>
                      <div
                        class="mt-2 p-3 rounded-xl  dark:bg-black/50 text-muted
           leading-relaxed"
                        set:html={education}
                      />
                    </details>
                  ) : (
                    <p
                      class={twMerge(`${title ? 'mt-3' : ''} text-muted`, descriptionClass, itemClasses?.description)}
                      set:html={education}
                    />
                  ))}

                {callToAction && (
                  <div
                    class={twMerge(
                      `${title || description ? 'mt-3' : ''} flex justify-end  gap-2 `,
                      actionClass,
                      itemClasses?.actionClass
                    )}
                  >
                    {Array.isArray(callToAction) ? (
                      callToAction.map((cta) => (
                        <Button {...cta} class={twMerge(cta.class ?? '', 'w-auto mb-2 sm:mb-4 px-3 py-1.5 text-sm')} />
                      ))
                    ) : (
                      <Button
                        {...callToAction}
                        class={twMerge(callToAction.class ?? '', 'w-auto mb-2 sm:mb-4 px-3 py-1.5 text-sm')}
                      />
                    )}
                  </div>
                )}
              </div>
            </div>
          </div>
        )
      )}
    </div>
  )
}
