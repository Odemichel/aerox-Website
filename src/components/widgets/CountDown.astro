---
const { targetDate } = Astro.props as { targetDate: Date };
const id = `countdown-${Math.random().toString(36).slice(2, 9)}`;
---

<span id={id} data-target-date={targetDate.toISOString()} class="inline-block font-bold text-content">
  0j 00h 00m 00s
</span>

<script is:inline>
  (() => {
    const pad = (n) => String(n).padStart(2, '0');

    function initCountdown(el) {
      const attr = el.getAttribute('data-target-date');
      if (!attr) return;
      const target = new Date(attr).getTime();
      if (isNaN(target)) return;

      const update = () => {
        const diff = target - Date.now();
        if (diff <= 0) {
          el.textContent = 'ðŸŽ¯ 0j 00h 00m 00s';
          clearInterval(interval);
          return;
        }
        const j = Math.floor(diff / 86400000);
        const h = Math.floor((diff / 3600000) % 24);
        const m = Math.floor((diff / 60000) % 60);
        const s = Math.floor((diff / 1000) % 60);
        el.textContent = `${j}j ${pad(h)}h ${pad(m)}m ${pad(s)}s`;
      };

      update();
      const interval = setInterval(update, 1000);
      document.addEventListener('astro:before-swap', () => clearInterval(interval), { once: true });
    }

    // Init tous les compteurs de la page
    document.querySelectorAll('[id^="countdown-"]').forEach(initCountdown);
    document.addEventListener('astro:after-swap', () => {
      requestAnimationFrame(() => {
        document.querySelectorAll('[id^="countdown-"]').forEach(initCountdown);
      });
    });
  })();
</script>
