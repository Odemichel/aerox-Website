---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
  {
    testimonials &&
      testimonials.map(({ title, testimonial, name, job, image, profile }) => (
        <div class="h-auto intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
          <div class="flex flex-col p-4 md:p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600">

            {/* IMAGE réelle + TEXTE du témoignage */}
            <div class="flex gap-4">
             

              <div class="flex flex-col justify-center">
                {title && <h2 class="text-lg font-medium leading-6 mb-2">{title}</h2>}
                {testimonial && (
                  <blockquote>
                    <p class="text-muted italic" set:html={testimonial} />
                  </blockquote>
                )}
              </div>
               {image && (
                <div class="flex-shrink-0 rounded-xl overflow-hidden border border-slate-200 dark:border-slate-600">
                  <Image
                    class="w-full h-full "
                    width={96}
                    
                    {...image}
                  />
                </div>
              )}
            </div>

            <hr class="border-slate-200 dark:border-slate-600 my-4" />

            {/* Avatar + nom + job */}
            <div class="flex items-center">
              {profile && (
                <div class="h-13 w-13 rounded-full overflow-hidden border border-slate-200 dark:border-slate-600">

                  <Image
                    class="h-full w-full object-cover"
                    width={70}
                    height={70}
                    {...profile}
                  />
                </div>
              )}
              <div class="ml-3 rtl:ml-0 rtl:mr-3">
                {name && <p class="text-base font-semibold">{name}</p>}
                {job && <p class="text-xs text-muted" set:html={job} />}
              </div>
            </div>
          </div>
        </div>
      ))
  }
</div>

{callToAction && (
  <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
    <Button {...callToAction} />
  </div>
)}

  
</WidgetWrapper>
