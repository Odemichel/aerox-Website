---
import type { GetStaticPaths } from 'astro';
import Headline from '~/components/blog/Headline.astro';
import BlogList from '~/components/blog/List.astro';
import Pagination from '~/components/blog/Pagination.astro';
import Layout from '~/layouts/PageLayout.astro';
import type { Post } from '~/types';
import { blogListRobots, blogPostsPerPage, fetchPosts } from '~/utils/blog';

import { DEFAULT_LOCALE, getDict, SUPPORTED_LOCALES, type Locale } from '~/lib/i18n';

export const prerender = true;

// ✅ Génération statique des pages pour chaque langue
export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const pages = await Promise.all(
    SUPPORTED_LOCALES.map(async (lang) => {
      const l = lang as Locale;
      const posts = await fetchPosts(l);
      return paginate(posts, {
        pageSize: blogPostsPerPage,
        params: { lang: l, blog: 'blog' },
      });
    })
  );
  return pages.flat();
};

// ✅ Sécurisation robuste
const props = Astro.props as {
  params?: { lang?: string };
  page: {
    data: Post[];
    currentPage: number;
    lastPage: number;
    url: { prev?: string; next?: string };
  };
};

const params = props.params ?? {};
const page = props.page;

// ✅ Déterminer la langue depuis params ou URL
const maybeLang = params.lang ?? Astro.url.pathname.split('/').filter(Boolean)[0];
const lang: Locale = SUPPORTED_LOCALES.includes(maybeLang as Locale)
  ? (maybeLang as Locale)
  : DEFAULT_LOCALE;

const dict = getDict(lang);

const metadata = {
  title:
    lang === 'fr'
      ? `Blog${page.currentPage > 1 ? ` — Page ${page.currentPage}` : ''}`
      : `Blog${page.currentPage > 1 ? ` — Page ${page.currentPage}` : ''}`,
  description:
    lang === 'fr'
      ? 'Conseils, analyses et innovations pour optimiser ton entraînement vélo et triathlon.'
      : 'Tips, insights, and innovations to optimize your cycling and triathlon training.',
  robots: { index: blogListRobots?.index && page.currentPage === 1, follow: blogListRobots?.follow },
  openGraph: { type: 'blog' },
};
---

<Layout metadata={metadata}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline subtitle={dict['blog.subtitle']}>
      {dict['blog.title']}
    </Headline>

    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
